version: "3"

networks:
  my-network:
    driver: bridge
services:
  kafka:
    image: 'apache/kafka:latest'
    ports:
      - '9092:9092'
    networks:
      - my-network
    hostname: broker
    container_name: broker
    environment:
      KAFKA_NODE_ID: 0
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
#    environment:
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_BROKER_ID: 1
#    command: "sh -c '(/opt/kafka/bin/kafka-topics.sh --create --topic measurements --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 && echo Topic created)'"

#  kafka:
#    image: 'bitnami/kafka:latest'
#    ports:
#      - '9092:9092'
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#    networks:
#      - my-network
#    command: "sh -c '(/opt/bitnami/kafka/bin/kafka-topics.sh --create --topic measurements --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 && echo Topic created)'"
#  kafka:
#    image: 'bitnami/kafka:latest'
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#    ports:
#      - '9092:9092'
#    networks:
#      - my-network
#    command: "sh -c '(/opt/bitnami/kafka/bin/kafka-topics.sh --create --topic measurements --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1 && echo Topic created)'"
  backend:
    image: 'antoniosab/kinski:latest'
    depends_on:
      - kafka
    ports:
      - '8080:8080'
    networks:
      - my-network

